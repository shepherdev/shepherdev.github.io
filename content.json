{"pages":[{"title":"","text":"大一在校生, 专业计算机网络, 尚无建树. 如果想对我提一些建议，可以去留言板块，如果评论出现Error: Network Error，稍等一会再重新刷新网页即可，若还是报错，可以联系我的邮箱shepherd2001@163.com 小博客历史","link":"/about/index.html"},{"title":"","text":"唐艺昕 李沁 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"分类","text":"","link":"/categories/index.html"},{"title":"contact","text":"","link":"/contact/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"如果你有什么建议或者问题，那么就在这里说出来吧！","link":"/message/index.html"},{"title":"音乐歌单收藏","text":"--- 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: clientId, clientSecret: clientSecret, id: '666666', repo: 'shepherdev.github.io', owner: 'shepherdev', admin: \"shepherdev\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"},{"title":"标签","text":"","link":"/tags/index.html"}],"posts":[{"title":"asc字符图表、流程图，渲染代码图","text":"在绘制流程图等简单图形上面，打开图形绘制工具，画完保存，上传图床，复制链接（虽然typora简化了这些），但在看到某博客上面的一些使用asc，unicode字符做的图后，觉得很牛逼方便，于是便开始找工具制作。 先放几个例子 123456789+---+ +---+ +---+| A | --&gt; | C | --&gt; | D |+---+ +---+ +---+ | | v +---+ | E | +---+ 1234567 ................. v :+------+ +---------+ +---------+ +---------+ +--------------+| Task | --&gt; | Created | --&gt; | Audit 1 | --&gt; | Audit 2 | --&gt; | Execute Task |+------+ +---------+ +---------+ +---------+ +--------------+ ^ : ................................. 优先显而易见，兼容性强，体积小。实现这些图的方式有两种 手动绘制，怎么想就怎么画，不受限制。 写代码，使用工具渲染成其他格式（asc，html，avg）。代码复用性强 Graph easy这是一个工具，需要掌握一些语法进行渲染 安装在我的manjaro上，配置AUR源后，安装指令如下 1yaourt -S perl-graph-easy 使用graph-easy 文本即可，更多指令参见graph-easy --help 语法 简单语法 123456# 文本内容[hello]-&gt;[world]# 渲染图+-------+ +-------+| hello | --&gt; | world |+-------+ +-------+ 复杂语法mer 123456[ Client ]{rows:8;} -- (A) Authorizatoin Request --&gt; [ 1.Resource Owner ]{rows:2;}[ 1.Resource Owner ] -- (B) Authorizatoin Grant --&gt; [ Client ][ Client ] -- (C) Authorizatoin Request --&gt; [ 2.Authorizatoin Server ]{rows:2;}[ 2.Authorizatoin Server ] -- (D) Access Token --&gt; [ Client ][ Client ] -- (E) Access Token --&gt; [ 3.Resource Server ]{rows:2;}[ 3.Resource Server ] -- (F) Protected Resource --&gt; [ Client ] 渲染后 123456789101112131415161718+--------+ (A) Authorizatoin Request +------------------------+| | ---------------------------&gt; | || | | 1.Resource Owner || | (B) Authorizatoin Grant | || | &lt;--------------------------- | || | +------------------------+| | (C) Authorizatoin Request +------------------------+| | ---------------------------&gt; | || Client | | 2.Authorizatoin Server || | (D) Access Token | || | &lt;--------------------------- | || | +------------------------+| | (E) Access Token +------------------------+| | ---------------------------&gt; | || | | 3.Resource Server || | (F) Protected Resource | || | &lt;--------------------------- | |+--------+ +------------------------+ 更多的语法参见 官网 部分翻译 mermaidmermermaid把一些流程图片等简单图片简化成代码，我以前都是用工具制作成图片在上传图床使用，使用mermaid很明显是一个高效率的方法，但需要学习一点它的语法，typorta支持渲染，如果需要在博客上渲染的化需要安装hexo-filter-mermaid-diagrams插件，我的博客还不能渲染，但typora可以导出html gantt dateFormat MM-DD title 软件开发甘特图 section 设计 需求: done,des1, 01-06,01-08 原型: active, des2, 01-09, 3d UI设计: des3, after des2, 5d 未来任务: des4, after des3, 5d section 开发 学习准备理解需求: crit, done, 01-06,24h 设计框架: crit, done, after des2, 2d 开发: crit, active, 3d 未来任务: crit, 5d 休息: 2d section 测试 功能测试: active, a1, after des3, 3d 压力测试: after a1 , 20h 测试报告: 48h graph TB subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end c1-->a2 Drawit手绘工具，这是一个vim插件，下载安装 使用\\di 进入drawit模式 \\ds 退出 功能 按键和指令 作用 left 向左绘制 right 向右绘制 up 向上绘制 down 向下绘制 h 左移动 j 下移动 k 上 l 右 space 橡皮擦模式 PD 右下绘制 PU 左下绘制 HOME 左上绘制 END 右上绘制 v,&lt;,&gt;,^ 四个箭头 \\v,\\&lt;,\\&gt;,^ 四个粗箭头 crtl+v/鼠标拖动 进入visible模式 \\l 在visible模式下，对选择块画线 \\a 呈上，画带箭头的线 \\b 对选择块画盒子 \\e 对选择块画椭圆 \\f 字符 以字符填充光标区域 \\r 字符 以字符填充选择块填充 下面是我乱画的，随意参考 1234567891011121314151617181920212223242526┌─────────┐└─────────┘ | ------------_-_ | \\ / +--------+ X | | | +------+ / \\ | | |-----| |\\ X \\| +--------+ | | \\ / \\ | +------+ \\ / \\ /| \\ / X | \\ X X / X | \\ / \\ / \\ / / | --------------------------&gt; X X X / | _ _ | \\ / | +---+ _'_ | +------------+ | | \\ / | |333333333333| | | ' _|_ |333333333333| | | \\ / |333333333333| | ^-|----------+------___------ |33333333333| | \\____ +------------+ | \\___ X /---|&gt;---- \\____ X \\ / / \\____ \\ X / \\___ \\ / \\____ X \\__ 参考文章如何制作纯 ASCII 文本流程图 python-tabulate这是一个python的库，用来制作表格，markdown里估计用不到了，但若想将程序的数组输出表格可以用到它 安装1pip install tabulate 使用支持传递的数据类型 list of lists or another iterable of iterables list or another iterable of dicts (keys as columns) dict of iterables (keys as columns) two-dimensional NumPy array NumPy record arrays (names as columns) pandas.DataFrame 我使用列表做示例 123from tabulate import tabulatea = [['a1','a2'],['b1','b2'],['c1','c2']] 普通的打印 123456&gt;&gt;&gt; print(tabulate(a))-- --a1 a2b1 b2c1 c2-- -- 可选参数headers，指定表格头部 传递指定表头数据 firstrow代表第一行为头部 keys使用索引 12345&gt;&gt;&gt; print(tabulate(a,headers='firstrow'))a1 a2---- ----b1 b2c1 c2 可选参数showindex，代表行索引 True False 123456&gt;&gt;&gt; print(tabulate.tabulate(a,showindex=True))- -- --0 a1 a21 b1 b22 c1 c2- -- -- 表格样式 plain 1234&gt;&gt;&gt; print(tabulate.tabulate(a,tablefmt='plain'))a1 a2b1 b2c1 c2 simple（默认） 12345-- --a1 a2b1 b2c1 c2-- -- pretty 12345+----+----+| a1 | a2 || b1 | b2 || c1 | c2 |+----+----+ pipe 1234|:---|:---|| a1 | a2 || b1 | b2 || c1 | c2 | github 1234|----|----|| a1 | a2 || b1 | b2 || c1 | c2 | grid 1234567+----+----+| a1 | a2 |+----+----+| b1 | b2 |+----+----+| c1 | c2 |+----+----+ fancy_grid 1234567╒════╤════╕│ a1 │ a2 │├────┼────┤│ b1 │ b2 │├────┼────┤│ c1 │ c2 │╘════╧════╛ 更多方法参考官方](https://pypi.org/project/tabulate/) 总结Graph-easy毕竟有点老，好久没更新了，为了画asc图掌握语法实在有点费力，没什么特殊需求不建议使用，绘制普通asc流程图我还是建议使用手绘，asc图表建议使用python库，若想绘制精致一点的流程图，时序图，干特图我选择mermaid。","link":"/2020/05/26/Blog/asc-table/"},{"title":"Gitalk和Travis自动化","text":"为了更好的体验及更加方便的写博客 Gitalk因为主题自带gitalk插件，虽然版本有点老，所以只需申请Github Application即可 点击申请 得到clientID和client Secret填入主题的配置文件即可 然后推送到仓库，使用管理员账户登录这个网页即可创建issue 偶尔会出现Error：network error的问题，原因不明 参考为博客添加 Gitalk 评论插件 因为文章过多，一个一个取创建太麻烦，于是我找到了自动初始化的方法， 先生成站点地图 参考hexo(3)-生成sitemap站点地图 然后我又参考了 nodejs版本的Gitalk/Gitment评论自动初始化 自动初始化 Gitalk 和 Gitment 评论 一个js脚本，一个ruby脚本 但我用起来都不理想… 接着我看到了这个自动初始化gitalk/gitment评论，然后我看到了hexo博客push到github的后自动部署到github pages Travis-CITravis CI 是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。 由于今天Travis在维护，我也不知道我的部署到底有没有成功 登录官方网站与github帐号绑定后选择追踪项目，然后在项目根目录添加.travis.yml文件 因为我的想法是推送博客源码到hexo分支，然后自动部署master分支，贴出我的源码仅供参考 123456789101112131415161718language: node_jsnode_js: stablebranches: only: - hexoinstall: - npm install hexoscript: - hexo clean - hexo gafter_script: - cd ./public - git init - git config user.name \"shepherdev\" - git config user.email \"shepherd2001@163.com\" - git add . - git commit -m \"Travis CI Auto Builder at $(date +'%Y-%m-%d')\" - git push --force --quiet \"https://${ACCESS_TOKEN}@github.com/shepherdev/shepherdev.github.io.git\" master:master 推送后可以在travis官网查看实时部署动态，值得一提的是配置的步骤有一行代码报错就会部署失败 为了搞定Travis我参考了很多文章，都列出了吧，我感觉我还用的到 Travis CI官网 阮一峰的持续集成服务 Travis CI 教程 Github 使用 Travis CI 实现 Hexo 博客自动部署 使用 Travis CI 实现 Hexo 博客自动部署 使用Travis CI自动部署Hexo博客 因为不知道是维护的缘故还是我操作的缘故导致我一直没弄成功","link":"/2020/04/11/Blog/gitalk%E5%92%8CTravis-CI/"},{"title":"配置amazing主题","text":"发现了hexo上面的有一个很美的主题模板–icraus 我使用的是remove修改的版本 照着readme文件进行简单配置可以了 使用LaTeX语法主题的_config.yml配置 12plugins: mathjax: true 哪篇文章需要使用，就在m头部加上 1mathJax: true 添加encrypt插件在博客下打开终端，输入 1npm install --save hexo-blog-encrypt 博客_config.yml加上全局配置 12345encrypt: abstract: 有东西被加密了, 请输入密码查看. message: 您好, 这里需要密码. wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试. wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容. 也可以在文章开头单独设置","link":"/2020/04/13/Blog/%E9%85%8D%E7%BD%AEamzing%E4%B8%BB%E9%A2%98/"},{"title":"wifiphisher安装与使用","text":"Wifiphisher是用于进行红队参与或Wi-Fi安全测试的恶意访问点框架。使用Wifiphisher，渗透测试人员可以通过执行有针对性的Wi-Fi关联攻击轻松地在针对无线客户端的中间人位置。Wifiphisher可以进一步用于对连接的客户端发起受害者自定义的网络钓鱼攻击，以捕获凭据（例如，从第三方登录页面或WPA / WPA2预共享密钥）或用恶意软件感染受害者站点。 曾使用字典暴力破解wifi，花费时间太长，而且不一定成功（与字典有关），所以尝试一下钓鱼 安装与使用前提： Kali Linux 或者其他linux发行版； 一个支持AP模式的无线网络适配器，驱动要求支持netlink； 一个支持Monitor模式并且能够实现命令注入的无线网络适配器，驱动要求支持netlink。如果你没有这种适配器，那么你在运行WiFiPhisher时请使用—nojamming选项； 安装官方推荐在kali上使用wifiphisher，本着学习精神，我决定在我的manjaro上尝试安装 在我的manjaro折腾了一天(虽然软件管理pacman有wifiphisher，但是因为python2-scapy的依赖问题导致构建不成功)。于是从github上下载1.4版本，从python2到python3，从pip2到pip3，自己手动下载各种依赖:angel:，最后发现不是依赖的问题，是发布的wifiphisher-1.4版本貌似只支持python2，但使用python2安装后，报错 1ImportError: cannot import name hostapd_controller 这就很奇怪，明明1.4已经说了解决了hostapd的问题。在lssue也没找到很好的解决方法（看英文看到头痛） 于是直接clone最新开发进度，使用python3进行安装 使用在终端使用wifiphisher进入了界面，但是搜不到接入点 可能是网卡的缘故吧，官方对网卡的要求 一个无线网络适配器，支持AP＆Monitor模式并能够注入。驱动程序应支持netlink。 使用iw list查了下我的网卡 123456789Supported interface modes: * IBSS * managed * AP * monitor * mesh point * P2P-client * P2P-GO * P2P-device 可以看到是支持AP和监听的，难道是不能注入？ 尝试使用指令查看是否支持注入，结果 1234➜ ~ aireplay-ng -9 wlp1s0 11:02:52 Trying broadcast probe requests...11:02:53 No Answer...11:02:53 Found 0 APs manjaro很多关于网络的指令都没有，需要自行安装net-tools(ifconfig)，aircrack-ng(aireplay-ng) 正在摸索中，考虑网卡的原因，下单了一个3070芯片的网卡，插上后输入在我的电脑里的设备名是wlp0s20f0u1 再次使用wifiphisher 1sudo wifiphisher -i wlp0s20f0u1 当只有一个网卡且这个网卡支持监听和AP时，可以使用-i手动生成恶意AP并进行攻击 如果有多余的网卡，使用-eI参数指定监听网卡，-aI指定生成AP的网卡，更多参数参见wifiphisher -h 成功了！ 选择攻击目标后的钓鱼方案 攻击成功！ 手机连接后跳转界面 选择攻击方案的模板可自定义，在我的电脑上模板路径是/usr/lib/python3.8/site-packages/wifiphisher-1.4-py3.8.egg/wifiphisher/data/phishing-pages 声明 请不要在没有征得目标网络管理员许可的情况下利用WiFiPhisher实施攻击，这种行为将会被视作非法活动。笔者不承担任何责任，请谨慎使用。 参考文章 测试注入 wifiphisher官方 多版本Python安装pip及pip版本管理终极教程 2to3 - 自动将 Python 2 代码转为 Python 3 代码 aircrack-ng判断网卡是否兼容","link":"/2020/04/29/Linux/Manjaro%E4%B8%8A%E7%9A%84wifiphisher%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"},{"title":"aircrack-ng破解wifi","text":"但是使用wifiphisher的情况并没有我想象的那样强大，应该是我的操作问题吧，只是生成了一个假热点，并将用户重定向至钓鱼页面，并没有断开连接原来wifi的设备 在查找资料时碰到了这个工具包，有一个功能就是强制断开他人的wifi，挺有趣的记下笔记 使用前提，支持监听注入的网卡 step1使用iwconfig查看网卡加载情况 step2airmon-ng check kill杀掉所有网络进程 如果杀掉后自动启动的话，建议使用systemctl stop杀得彻底些 step3airmon-ng start wlp0s20f0u1启动网卡监听模块 注意网卡名字会变成wlp0s20f0u1mon step4airodump-ng wlp0s20f0u1mon开始监听 PWR是信号强度，越小信号越强 CH代表信道 step5airodump-ng -c 6 --bssid 网络mac地址 -w filename wlp0s20f0u1mon开始抓包 -c，指的是信道CH –bssid，指的是AP mac地址 -w，输出的文件路径 STATION代表的是设备mac，由几个mac就代表有几个设备 当有设备重新连接时，就会抓到握手包，放到-w指定的文件里，下一步介绍强制掉线 step6aireplay-ng -0 0 -a AP_mac -c 设备mac wlp0s20f0u1mon强制wifi掉线 重连时就会抓到握手包 step7aircrack-ng -a2 -b AP_mac -w 字典.txt filename.cap跑字典，爆破密码 字典去网上找吧 参考文献【无线攻防】使用aircrack-ng工具破解wifi密码","link":"/2020/05/03/Linux/aircrack-ng/"},{"title":"优化Manjaro","text":"为了让系统完美的契合自己，查了很多资料来完善它，写这篇文章记录下过程 sh首先就是将bash改成了zsh，使用主题ys，高亮插件和语法补全插件 参考文章oh-my-zsh,让你的终端从未这么爽过 mail在使用crond时，总感觉manjaro的mail有点问题，重新弄了一下 下载s-nail、sendmail、procmail、m4 在使用过程中发现sendmail很卡顿，主要原因是WARNING: local host name (MY) is not qualified; see cf/README: WHO AM I? 查了下将/etc/hosts里的 1127.0.0.1 localhost 改为了（MY是我的主机名） 1127.0.0.1 localhost.localdomain localhost MY 这样启动和运行就快多了，原理就是sendmail在解析我的主机名，而我的主机名MY根本就找不到，所以浪费时间，在hosts里把主机名作为别名添加到IP后面即可 参考文章 archwiki sendmail linux sendmail 启动慢及mail 无法发送的问题一例 rsyslog因为是看鸟哥的书学的linux，对rsyslog日志管理比较熟悉，而manjaro自带的是syslog，于是查wiki安装了rsyslog 首先卸载syslog-ng，以免冲突，然后下载rsyslog，注意它在AUR源里 为了从systemd提取日志 需要加载imjournal模块，在/etc/rsyslog.conf添加 1$ ModLoad imjournal 然后转发journal，在/etc/systemd/jouranld.conf修改 1ForwordToSyslog = yes 重启rsyslog服务即可 参考文章 Archwiki-rsyslog 记住要设置开机自启 下面是本机上的程序(不包括依赖) program &gt;foldedacpi 1.7-3acpid 2.0.32-1aircrack-ng 1.6-2alsa-firmware 1.2.1-2alsa-utils 1.2.2-1android-tools 29.0.6-1android-udev 20200410-1apparmor 2.13.4-4archlinuxcn-keyring 20200226-1ark 20.04.0-1autoconf 2.69-7automake 1.16.2-1avahi 0.8+15+ge8a3dd0-1b43-fwcutter 019-3baidunetdisk-bin 3.0.1.2-7bash-completion 2.10-1bauh 0.9.0-1bind-tools 9.16.2-2binutils 2.34-2.1bison 3.5.4-1bluedevil 1:5.18.5-1bluez-utils 5.54-2btrfs-progs 5.6-1bzip2 1.0.8-3coreutils 8.32-1cpupower 5.6-1crda 4.14-3cronie 1.5.5-1cryptsetup 2.3.2-1cups 2.3.3-1cups-pdf 3.0.1-5cups-pk-helper 0.2.6-3deepin-wine-wechat 2.8.0.121-1deepin.com.qq.office 2.0.0_4-2device-mapper 2.02.187-2dhclient 4.4.2-2dhcpcd 9.0.2-1dia 0.97.3-5diffutils 3.7-3dkms 2.8.1-2dmidecode 3.2-1dmraid 1.0.0.rc16.3-12dnsmasq 2.81-4dolphin 20.04.0-1dolphin-plugins 20.04.0-1dosfstools 4.1-3e2fsprogs 1.45.6-2eclipse-java 4.15-1ecryptfs-utils 111-3efibootmgr 17-1exfat-utils 1.3.0-1f2fs-tools 1.13.0-1fakeroot 1.24-2fcitx 4.2.9.7-3fcitx-configtool 0.4.10-3fcitx-googlepinyin 0.1.6-6fcitx-qt5 1.2.4-4ffmpeg 1:4.2.2-6ffmpegthumbs 20.04.0-1file 5.38-3filelight 20.04.0-1filesystem 2019.10-4findutils 4.7.0-2firefox 76.0.1-1flatpak 1.7.2-1flex 2.6.4-3fwupd 1.4.0-1gawk 5.1.0-1gcc 9.3.0-1gcc-libs 9.3.0-1gettext 0.20.2-1ghostscript 9.52-1gimp 2.10.18-6git 2.26.2-1gitg 1:3.32.1+17+gb4c8155f-1glibc 2.31-2gnome-icon-theme 3.12.0-5gnome-settings-daemon 3.36.1-1gnome-themes-extra 3.28-1google-chrome 81.0.4044.138-1grep 3.4-1grub 2.04-10grub-theme-manjaro 18.1-1gsfonts 20180524-2gst-libav 1.16.2-1gst-plugins-bad 1.16.2-9gst-plugins-base 1.16.2-1gst-plugins-good 1.16.2-3gst-plugins-ugly 1.16.2-3gtk-theme-breath 5.9.0-1gtk3 1:3.24.20-1gvfs 1.44.1-3gvfs-afc 1.44.1-3gvfs-gphoto2 1.44.1-3gvfs-mtp 1.44.1-3gvfs-nfs 1.44.1-3gvfs-smb 1.44.1-3gwenview 20.04.0-2gzip 1.10-3haveged 1.9.8-1hostapd 2.9-3hplip 1:3.20.3-2htop 2.2.0-3illyria-wallpaper 1.4-1imagewriter 1.10.1420800585.134a9b3-4inetutils 1.9.4-8inkscape 1.0-3intel-ucode 20191115-3intellij-idea-community-edition 2:2020.1.1-1inxi 3.0.37-1iproute2 5.6.0-1iptables 1:1.8.4-1.1iputils 20190709-2ipw2100-fw 1.3-10ipw2200-fw 3.1-8jdk 14.0.1-1jfsutils 1.1.15-7kaccounts-providers 20.04.0-1kamera 20.04.0-1kate 20.04.0-1kcalc 20.04.0-1kde-gtk-config 5.18.5-1kde-servicemenus-rootactions 2.9.1-1kdeconnect 20.04.0-1kdegraphics-thumbnailers 20.04.0-1kdenetwork-filesharing 20.04.0-1kdenlive 20.04.0-1kdeplasma-addons 5.18.5-1keditbookmarks 20.04.0-1kernel-alive 0.5-1kfind 20.04.0-1kgamma5 5.18.5-1kget 20.04.0-1khelpcenter 20.04.0-1kimageformats 5.69.0-1kinfocenter 5.18.5-1kio-extras 20.04.0-1kmenuedit 5.18.5-1konsole 20.04.0-1konversation 1.7.5-3kscreen 5.18.5-1kscreenlocker 5.18.5-1ksshaskpass 5.18.5-1ksysguard 5.18.5-1ksystemlog 20.04.0-1kwallet-pam 5.18.5-1kwalletmanager 20.04.0-1kwayland-integration 5.18.5-1kwin 5.18.5-1kwrited 5.18.5-1latte-dock 0.9.11-1less 551-3lib32-flex 2.6.4-2lib32-libcanberra 0.30+2+gc0620e4-3lib32-libcanberra-pulse 0.30+2+gc0620e4-3lib32-libva-intel-driver 2.4.0-1lib32-libva-mesa-driver 20.0.6-2lib32-libva-vdpau-driver 0.7.4-6lib32-mesa-demos 8.4.0-1lib32-mesa-vdpau 20.0.6-2lib32-vulkan-intel 20.0.6-2lib32-vulkan-radeon 20.0.6-2libcanberra 0.30+2+gc0620e4-3libcanberra-gstreamer 0.30+2+gc0620e4-3libcanberra-pulse 0.30+2+gc0620e4-3libdvdcss 1.4.2-2libestr 0.1.11-1libfastjson 0.99.8-2libktorrent 2.1.1-1liblogging 1.0.6-3librelp 1.4.0-1libtool 2.4.6+42+gb88cebd5-12libva-intel-driver 2.4.0-1libva-mesa-driver 20.0.6-2libva-vdpau-driver 0.7.4-4licenses 20200427-1linux-firmware 20200424.r1632.b2cad6a-1linux-lts-headers 1:5.4-1linux-rt-lts-manjaro 5.4-1linux-rt-lts-manjaro-headers 5.4-1linux54 5.4.39-1linux54-rt 5.4.28_rt19-1linux54-rt-headers 5.4.28_rt19-1logrotate 3.16.0-1lsb-release 1.4-13lvm2 2.02.187-2m4 1.4.18-3make 4.3-3man-db 2.9.1-2man-pages 5.06-2manjaro-alsa 20200126-1manjaro-application-utility 1.3.2-2manjaro-bluetooth 20200126-1manjaro-browser-settings 20200124-1manjaro-documentation-en 20181009-1manjaro-firmware 20160419-1manjaro-hello 0.6.5-11manjaro-hotfixes 2018.08-6manjaro-kde-settings 20200430-1manjaro-pulse 20200126-1manjaro-release 20.0.1-1manjaro-settings-manager-kcm 0.5.6-8manjaro-settings-manager-knotifier 0.5.6-8manjaro-system 20200427-1manjaro-wallpapers-18.0 1.4-3mdadm 4.1-2memtest86+ 5.01-3mesa-demos 8.4.0-4mesa-vdpau 20.0.6-2mhwd 0.6.4-2mhwd-db 0.6.4-10milou 5.18.5-1mindmaster-cn 7.2-1mkinitcpio-openswap 0.1.0-3mobile-broadband-provider-info 20190618-1modemmanager 1.12.10-1mtpfs 1.1-3mypaint 1.2.1-12nano 4.9.2-1net-tools 1.60.20181103git-2netctl 1.23-1netease-cloud-music 1.2.1-1netease-cloud-music-gtk 1.1.1-1networkmanager 1.24.0-1networkmanager-openconnect 1.2.6-1networkmanager-openvpn 1.8.12-1networkmanager-pptp 1.2.9dev+10+gb41b0d0-1networkmanager-vpnc 1.2.7dev+20+gdca3aea-1nfs-utils 2.4.3-2noto-fonts 20190926-4noto-fonts-cjk 20190409-1noto-fonts-emoji 20191016-6nss-mdns 0.14.1-2ntfs-3g 2017.3.23-4ntp 4.2.8.p14-1numlockx 1.2-5obs-studio 25.0.8-1okular 20.04.0-1openresolv 3.10.0-1openssh 8.2p1-3os-prober 1.77-1oxygen 5.18.5-1oxygen-icons 1:5.69.0-1p7zip 16.02-5pacman 5.2.1-4pamac-cli 9.5.0-1pamac-gtk 9.5.0-1pamac-snap-plugin 9.5.0-1pamac-tray-appindicator 9.5.0-1partitionmanager3 3.3.1-1patch 2.7.6-8patchutils 0.3.4-3pavucontrol 1:4.0-1pciutils 3.6.4-1peek 1.5.1-2perl 5.30.2-1perl-file-mimeinfo 0.29-2phonon-qt5-gstreamer 4.10.0-1pinta 1.6-4pkgconf 1.6.3-4plasma-desktop 5.18.5-1plasma-nm 5.18.5-1plasma-pa 5.18.5-1plasma-workspace 5.18.5-1plasma-workspace-wallpapers 5.18.5-1plasma5-themes-breath 0.4.0-2poppler-data 0.4.9-2powerdevil 5.18.5-1powertop 2.12-1print-manager 20.04.0-1procmail 3.22-10procps-ng 3.3.16-1psmisc 23.3-2pulseaudio-ctl 1.67-1pulseaudio-zeroconf 13.0-3pycharm-community-edition 2020.1.1-1pygtk 2.24.0-13python-lxml 4.5.0-1python-pillow 6.2.1-1python-pip 20.0.2-1python-pygame 1.9.6-3python-pyqt5 5.14.2-1python-pysmbc 1.0.20-1python-pyxdg 0.26-6python-reportlab 3.5.42-1python-xlib 0.27-1python2-pbkdf2 1.3-1python2-pyric 0.1.6.3-1qq-linux 2.0.0_b2_1082-1qt5-imageformats 5.14.2-1qt5-virtualkeyboard 5.14.2-1quadrapassel 3.36.02-1rar 5.9.0-1reiserfsprogs 3.6.27-3roguehostapd-git 1.0.r45.g381b373-1rsync 3.1.3-3rsyslog 8.2004.0-1ruby 2.7.1-2s-nail 14.9.19-1samba 4.12.2-3scapy 2.4.3-2scrcpy 1.13-1screenfetch 3.9.1-1sddm 0.18.1-2sddm-breath-theme 0.4.0-2sddm-kcm 5.18.5-1sed 4.8-1sendmail 8.15.2-9shadow 4.8.1-1simplescreenrecorder 0.4.1-1skanlite 2.1.0.1-2sl 5.02-5snapd 2.44.5-1snapd-glib 1.54-1spectacle 20.04.0-1spectre-meltdown-checker 0.43-1splix 2.0.0-14sshfs 3.7.0-1steam-manjaro 1.0.0.61-7subversion 1.13.0-2sudo 1.8.31.p1-1sysfsutils 2.1.0-11system-config-printer 1.5.12+33+g23b454ef-1systemd-fsck-silent 239-1systemd-kcm 1.2.1-5systemd-sysvcompat 245.5-2systemsettings 5.18.5-1tar 1.32-3terminus-font 4.48-1tesseract 4.1.1-2texinfo 6.7-3thunderbird 68.8.0-1timeshift 20.03.r0.gcecd294-1tlp 1.3.1-2traceroute 2.1.0-5ttf-bitstream-vera 1.10-12ttf-droid 20121017-7.2ttf-inconsolata 1:3.000-2ttf-indic-otf 0.2-9ttf-liberation 2.1.0-1typora 0.9.86-1udiskie 2.1.1-1udisks2 2.8.4-2unarchiver 1.10.1-10usb_modeswitch 2.6.0-2usbutils 012-2user-manager 5.18.5-1util-linux 2.35.1-2.1vde2 2.3.2-13vi 1:070224-4vim 8.2.0717-2virtualbox 6.1.6-1virtualbox-ext-vnc 6.1.6-1virtualbox-guest-iso 6.1.6-1virtualbox-host-dkms 6.1.6-1virtualbox-sdk 6.1.6-1visual-studio-code-bin 1.45.1-1vlc 3.0.10-1vokoscreen-git 3.0.2.13.g9e58d6fb-1vulkan-intel 20.0.6-2vulkan-radeon 20.0.6-2wacom-utility 1.21-6wallpapers-2018 1.2-1wallpapers-juhraya 1.1-2wget 1.20.3-3which 2.21-5whois 5.5.6-1wireshark-qt 3.2.3-1wpa_supplicant 2:2.9-7wps-office-cn 11.1.0.9505-1wps-office-mui-zh-cn 11.1.0.9505-1xclip 0.13-2xdg-desktop-portal 1.7.2-1xdg-desktop-portal-kde 5.18.5-1xdg-su 1.2.3-1xdg-user-dirs 0.17-2xdg-utils 1.1.3+19+g9816ebb-1xf86-input-elographics 1.4.2-1xf86-input-evdev 2.10.6-1xf86-input-libinput 0.29.0-2xf86-input-void 1.4.1-4xf86-video-amdgpu 19.1.0-1xf86-video-ati 1:19.1.0-1xf86-video-intel 1:2.99.917+906+g846b53da-1xf86-video-nouveau 1.0.16-1xfsprogs 5.6.0-2xmind 3.7.9+8update9-1xorg-server 1.20.8-2xorg-twm 1.0.10-2xorg-xinit 1.4.1-1xorg-xkill 1.0.5-2yakuake 20.04.0-1yaourt 1.9-1yay 9.4.7-2youdao-dict 1.1.0-2zeal 1:0.6.1-1zsh 5.8-1 ventoy是一个镜像工具，可以将u盘的iso文件直接读取使用 mindmaster，xmind制作脑图的工具 Packet tracer用户登录闪退问题安装ttf-ms-fonts解决","link":"/2020/05/17/Linux/%E4%BC%98%E5%8C%96Manjaro/"},{"title":"在Manjaro上使用virtualbox","text":"安装问题使用pacman -S virtualbox后，打开创建新的新的虚拟机出现错误 1234567WARNING: The vboxdrv kernel module is not loaded. Either there is no module available for the current kernel (5.4.35-1-MANJARO) or it failed to load. Please recompile the kernel module and install it by sudo /sbin/vboxconfig You will not be able to start VMs until this problem is fixed. 说模块没有加载成功，需要使用sudo /sbin/vboxconfig修复，但实际上没有这个文件 参考在 Arch 里安装 VirtualBox这篇文章后，我安装了两个模块 virtualbox-host-dkms linux-lts-headers 查看模块加载情况 1234# shepherd @ MY in ~ [14:04:17] C:1$ sudo vboxreload Unloading modules: Loading modules: vboxnetadp vboxnetflt vboxdrv 然后重新打开virtualbox，运行正常","link":"/2020/05/01/Linux/%E5%9C%A8Manjaro%E4%B8%8A%E4%BD%BF%E7%94%A8virtualbox/"},{"title":"备份Manjaro","text":"在256G的电脑装双系统，使用因为第一次使用linux时觉得70G够用（源自于学习只装40G的自信），所以在电脑上的格局是win系统60G，win软件110G，linux根目录30G，/home30G（要不是台式电脑在学校，劳资用的着这么憋屈？？！！）. 没错，和我想的一样，在不打游戏的linux上个人做点小事确实是够用了，空间还很充足（余个10G左右），but，我发现了百度云命令行版，于是想把系统备份一下（作为一个过来人，备份很重要，要不是因为电脑空间小，才不会使用百度云） 为了备份/home25G，/usr15G这两个空间大户，使用了压缩效率非常棒的xz格式压缩，而且分开压缩，分开上传。 xz压缩率是真的棒，就是花的时间有点久 /home 25G –&gt; 12G /usr 17G –&gt; 4.45G 我删了很多大型IDE，如eclipse，IDEA，pycharm等等，使用软件管理器卸载，结果我发现了一点不对经。。。你猜怎么着，打不开应用列表、添加不了桌面配件等等有关桌面的问题产生了，虽然吧在linux上桌面没了也不要紧，还有命令行嘛，但是，没桌面怎么看小姐姐看视频学习，所以我去查看pacman日志到底是删了哪些重要的东西。 看了半天，嗯～噢～，我发现我没看懂到底是哪个软件的问题，然后重启吧，发现网络也出问题了（大哭）。 我就这么废了半天去找是哪个软件的问题，最终我发现，还是重装吧，不过不是系统重装（作为一个垃圾程序员，不到万不得已是不会重装的），而是重新装一下桌面。 没网怎么装，USB连接手机就有了。 重新安装了nerworkmanager、sddm-kcm、sddm、kde-applications，并启动相关服务，重启，OK它回来了，因为配置什么的还在，所以也没损失什么。 这次给我的教训就是，别乱卸文件，一两个到没啥，卸多的时候一定要慎重考虑，最好使用命令卸，如果你不知道软件管理是采用什么模式卸载 今天差点想弄死自己，手贱。","link":"/2020/05/23/Linux/%E5%A4%87%E4%BB%BD%E5%B0%8F%E5%B9%B3%E6%9D%BF/"},{"title":"linux误删ESP分区?开机无法引导进linux?pacman -Syu后无法进入系统?","text":"此文章适合Manjaro+Windows10双系统&amp;UEFI+GPT食用, 其他情况仅供参考. 博主在Win系统中误操作中格式化了引导Manjaro的ESP(EFI System Partition)分区, 这下好了, 开机只能进Win10. 虽然我知道备份数据+重装系统不失为一种好方法, 但身为一个年轻人, 不折腾折腾怎么行? 所以开始查资料恢复ESP, 由于不是很懂linux系统启动原理导致走了很多弯路, 整理成文章分享给大家. 新建引导操作前需要准备一点东西: U盘 一个多余的操作系统 制作livecd(U盘启动盘)先去Manjaro官网下载iso镜像文件(或者镜像站下载, 这里推荐清华镜像站), 如果使用的是Win10操作系统, 建议使用rufus工具向U盘写入镜像; 如果是Linux操作系统, 使用dd指令即可. 如果是Android系统, 能接入U盘并识别的话, 可以考虑使用Termux的dd指令. 进入livecd将U盘插入需要修复的电脑进入BIOS, 选择U盘启动, 进入临时的Manjaro系统. 挂载&amp;chroot打开终端输入以下指令自动挂载电脑上的Manjaro操作系统, 自动chroot. 12sudo manjaro-chroot -a## 正常情况等待提示输入'1'即可 注意, 如果是格式化esp分区(uuid发生变化), 会导致格式化的分区不能自动挂载, 有两种解决方案 进入chroot后修改/etc/fstab修改格式化分区uuid后再次使用上述指令 清楚你的linux系统所在分区, 并尝试手动挂载 因为我是格式化的esp分区, 不能自动挂载上efi分区, 我尝试的是手动挂载, 列出我挂载的分区 /dev/nvme0n1p7 –&gt; /mnt/Manjaro/ /dev/nvme0n1p6 –&gt; /mnt/Manjaro/boot/ Restore_the_GRUB_Bootloader/dev/nvme0n1p8 –&gt; /mnt/Manjaro/home/ /dev/nvme0n1p9 –&gt; /mnt/Manjaro/boot/efi/ 手动挂载还需要输入以下指令 1234567sudo mount -t proc proc /mnt/procsudo mount -t sysfs sys /mnt/syssudo mount -o bind /dev /mnt/devsudo mount -t devpts pts /mnt/dev/pts/sudo modprobe efivarfssudo chroot /mntmount -t efivarfs efivarfs /sys/firmware/efi/efivars 重装并更新grub123sudo grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=manjaro --rechecksudo update-grub# 提示'未知的设备nvme0n1'不用管他 如果上述指令无误的话就可以重启了. 注意格式化esp分区的需要修改/etc/fstab文件的UUID, 不然重启会出现挂载超时提示, 进不了系统. 进入系统后再次输入update-grub, grub会识别到电脑的其他系统, 开机才会出现grub多重引导. pacman -Syu后无法进入系统进入系统后, 熟练的输入了pacman -Syu(距离上一次更新2个月了), 提示失败, 尝试数次, 成功. 重启后…引导不见了? 并且系统黑屏, 不能切换tty. 粗略猜测内核错误, 使用U盘chroot后, 输入pacman -S Linux后再次重启, 成功进入系统. 参考文章 Restore_the_GRUB_Bootloader 第十九章、开机流程、模组管理与Loader","link":"/2020/08/07/Linux/%E6%81%A2%E5%A4%8DESP%E5%88%86%E5%8C%BA/"},{"title":"安装Manjaro","text":"装Manjaro时遇到的一些问题 1.在分区时将/usr独立，导致开机启动提示/sbin/init does not exist，并且啥也不能输入，原因我还没弄懂 2.进入系统后，将亮度条拉到最低，最想不到的事出现了，黑屏（纯黑），我的电脑屏幕可不是A屏，我没想到这kde的开发者怎么坑，竟然把亮度最低弄到了黑屏QWQ，废了半天，终于找到了解决办法： 查了下官方文档，只能得到配置文件到家目录下的.config里 没多余的linux系统，我找到了我的U盘，插上进入shell挂载我的家目录进行除错 最开始我是在.config找kde开头的文件，emm只有两个，看了下没一个像亮度的 然后我仔细想了想，最开始用manjaro的时候，我一直没找到亮度条，原因就是它并不在显示里面，而是在电源管理里面，于是我换目标，找power开头的文件 我找到了里面的powermanagementprofilesrc(乖乖，名字真长)，看到brightness control，那一刻我感觉我看了上帝，看到设置值，果然是0，我改成10重启，终于看到了我熟悉的桌面QAQ","link":"/2020/02/19/Linux/%E8%AF%B4%E4%B8%80%E4%B8%8B%E8%87%AA%E5%87%A0%E8%A3%85Manjaro%E7%9A%84%E7%BB%8F%E5%8E%86/"},{"title":"使用wireshark分析TCP、UDP","text":"分析完理论知识后，不实践怎么知道是不是真的，wireshark就是一个非常方便的抓包工具，先用它来分析TCP和UDP 安装我的是Manjaro系统，安装指令 1pacman -Ss wireshark 使用抓包涉及更高的权限，需要sudo使用 抓包界面 分为上中下三个窗口，最上面的窗口显示的是包的简略信息，中间是详细信息，下面是原始16进制数据。 分析TCPwireshark将SEQ设置为相对，为了方便观察，也就是从0开始，不适和新手了解TCP协议，需要在TCP简略包上右键鼠标–&gt;首选项–&gt;relative sequence number关闭 使用过滤器可以过滤其他不必要的协议 通过给http给服务器上传文件进行抓包得到以下界面 三次握手 通过上图分析，我的计算机发送SYN标志tcp报文段，服务端回应了我SYN-ACK报文段，我的计算机回应ACK，三次握手建立连接完毕，然后开始发送数据（PSH表示不需要缓存，及时上交）。 连接成功后的发送方和接收方的SEQ=上一次SEQ+Len 此外我还发现了我的计算机发送的第一个tcp报文端的选项区 SACK_PERM=1 TSval=3007114814 TSecr=0 WS=128 SACK表示选择性ACK，将提前到达的ACK序号放在这个字段，这样就避免了不必要的重传 TSval(Timestamp value)和TSecr(Timestamp Echo Reply)都是32位的，发送方将当前时间填入TSval，接收方将当前时间填入TSecr，作用就是计算RTT(Round-Trip-Time)和防止回绕 WS（15位）用来扩大Win（16位），将Win扩大到31bit，128表示2的7次方，Win向左移动了7位 我的数据包最后还有这样一段英文 1[TCP segment of a reassembled PDU] 它代表该TCP区段是属于上层（比如HTTP）协议的数据 选项区参考 是否丢包 打开序列/时间统计图，路径：统计–&gt;TCP流图形–&gt;时间序列 观察到序列号都是上升的，说明没有丢包，丢包在抓包过程中也会有提示（TCP Retransmission） 计算吞吐量因为我使用HTTP协议进行传输数据，所以直接在http的post就能查看本次传输的相关信息 在TCP首选项里打开calculate conversation timestamp 观察TCP层 $$吞吐量=153010bytes/1.885852617s=81135.714byte/s=79.2340964389k/s$$ 四次挥手 重抓了一遍，这里只考虑正常的释放过程，其他本人知识水平不够暂不研究 分析UDPQQ登录使用的就是UDP协议，它自己在应用层的协议是OICQ UDP报文段很简单，简单观察可以知道UDP有四个字段，每个字段占2字节，接下来分析UDP和IP的里面的长度是什么关系 仅考虑IPv4 IP长度=IP头（20字节）+UDP头（8字节）+UDP数据 UDP长度=UDP头（8字节）+UDP数据 有效负载length只有2byte=65536bit，所以有效负载=65536-8=65528字节 发送与接收的端口关系发送者发送端口号在接收返回（响应）UDP 时候会变成接收端口号。接收者发送返回（响应）UDP 时候接受端口号会变成发送端口号。","link":"/2020/05/29/%E7%BD%91%E7%BB%9C/TCP-UDP/"}],"tags":[{"name":"gitalk","slug":"gitalk","link":"/tags/gitalk/"},{"name":"github","slug":"github","link":"/tags/github/"},{"name":"Travis CI","slug":"Travis-CI","link":"/tags/Travis-CI/"},{"name":"icraus","slug":"icraus","link":"/tags/icraus/"},{"name":"amazing","slug":"amazing","link":"/tags/amazing/"},{"name":"钓鱼","slug":"钓鱼","link":"/tags/%E9%92%93%E9%B1%BC/"},{"name":"wifi","slug":"wifi","link":"/tags/wifi/"},{"name":"manjaro","slug":"manjaro","link":"/tags/manjaro/"},{"name":"wifiphisher","slug":"wifiphisher","link":"/tags/wifiphisher/"},{"name":"aircrack-ng","slug":"aircrack-ng","link":"/tags/aircrack-ng/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"美化","slug":"美化","link":"/tags/%E7%BE%8E%E5%8C%96/"},{"name":"系统优化","slug":"系统优化","link":"/tags/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"},{"name":"virtualbox","slug":"virtualbox","link":"/tags/virtualbox/"},{"name":"虚拟机","slug":"虚拟机","link":"/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"KDE","slug":"KDE","link":"/tags/KDE/"},{"name":"备份","slug":"备份","link":"/tags/%E5%A4%87%E4%BB%BD/"},{"name":"esp","slug":"esp","link":"/tags/esp/"},{"name":"boot","slug":"boot","link":"/tags/boot/"},{"name":"双系统","slug":"双系统","link":"/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"},{"name":"装系统","slug":"装系统","link":"/tags/%E8%A3%85%E7%B3%BB%E7%BB%9F/"},{"name":"TCP","slug":"TCP","link":"/tags/TCP/"},{"name":"UDP","slug":"UDP","link":"/tags/UDP/"},{"name":"wireshark","slug":"wireshark","link":"/tags/wireshark/"}],"categories":[{"name":"博客","slug":"博客","link":"/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"操作系统","slug":"操作系统","link":"/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"工具","slug":"博客/工具","link":"/categories/%E5%8D%9A%E5%AE%A2/%E5%B7%A5%E5%85%B7/"},{"name":"主题","slug":"博客/主题","link":"/categories/%E5%8D%9A%E5%AE%A2/%E4%B8%BB%E9%A2%98/"},{"name":"Linux","slug":"操作系统/Linux","link":"/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"},{"name":"网络","slug":"网络","link":"/categories/%E7%BD%91%E7%BB%9C/"}]}